#!/usr/bin/env python3

import subprocess
import os


def _snapctl(action, setting):
    snapctl = subprocess.run(
        ["snapctl", action, setting],
        capture_output=True,
        text=True,
    )
    return snapctl.stdout

def set_defaults(config_var, config_val):
   if not config_var:
        return config_val
   else:
       return config_var


SNAP_COMMON = os.environ['SNAP_COMMON']
ENV_FILE=f"{SNAP_COMMON}/etc/.env"


DEFAULT_WITHOUT_TLS_ADDRESS=":1884"
DEFAULT_WITHOUT_TLS_TARGET="localhost:1883"

DEFAULT_WITH_TLS_ADDRESS=":8883"
DEFAULT_WITH_TLS_TARGET="localhost:1883"
DEFAULT_WITH_TLS_CERT_FILE="etc/mssl/certs/server.crt"
DEFAULT_WITH_TLS_KEY_FILE="etc/mssl/certs/server.key"
DEFAULT_WITH_TLS_SERVER_CA_FILE="mssl/certs/ca.crt"

DEFAULT_WITH_MTLS_ADDRESS=":8884"
DEFAULT_WITH_MTLS_TARGET="localhost:1883"
DEFAULT_WITH_MTLS_CERT_FILE="etc/mssl/certs/server.crt"
DEFAULT_WITH_MTLS_KEY_FILE="etc/mssl/certs/server.key"
DEFAULT_WITH_MTLS_SERVER_CA_FILE="etc/mssl/certs/ca.crt"
DEFAULT_WITH_MTLS_CLIENT_CA_FILE="etc/mssl/certs/ca.crt"
DEFAULT_WITH_MTLS_CERT_VERIFICATION_METHODS="ocsp"
DEFAULT_WITH_MTLS_OCSP_RESPONDER_URL="http://localhost:8080/ocsp"

# snapctl values
without_tls_address=_snapctl("get", "without.address")
without_tls_target=_snapctl("get", "without.target")

with_tls_address=_snapctl("get", "withtls.address")
with_tls_target=_snapctl("get", "withtls.target")
with_tls_cert_file=_snapctl("get", "withtls.cert")
with_tls_key_file=_snapctl("get", "withtls.key")
with_tls_server_ca_file=_snapctl("get", "withtls.serverca")

with_mtls_address=_snapctl("get", "withmtls.address")
with_mtls_target=_snapctl("get", "withmtls.target")
with_mtls_cert_file=_snapctl("get", "withmtls.cert")
with_mtls_key_file=_snapctl("get", "withmtls.key")
with_mtls_server_ca_file=_snapctl("get", "withmtls.serverca")
with_mtls_client_ca_file=_snapctl("get", "withmtls.clientca")
with_mtls_cert_verification_methods=_snapctl("get", "withmtls.verificiation")
with_mtls_ocsp_responder_url=_snapctl("get", "withmtls.ocsp")


without_tls_address=set_defaults(without_tls_address, DEFAULT_WITHOUT_TLS_ADDRESS)
without_tls_target=set_defaults(without_tls_target, DEFAULT_WITHOUT_TLS_TARGET)


with_tls_address=set_defaults(with_tls_address, DEFAULT_WITH_TLS_ADDRESS)
with_tls_target=set_defaults(with_tls_target, DEFAULT_WITH_TLS_TARGET)
with_tls_cert_file=set_defaults(with_tls_cert_file, DEFAULT_WITH_TLS_CERT_FILE)
with_tls_key_file=set_defaults(with_tls_key_file, DEFAULT_WITH_TLS_KEY_FILE)
with_tls_server_ca_file=set_defaults(with_tls_server_ca_file, DEFAULT_WITH_TLS_SERVER_CA_FILE)

with_mtls_address=set_defaults(with_mtls_address, DEFAULT_WITH_MTLS_ADDRESS)
with_mtls_target=set_defaults(with_mtls_target, DEFAULT_WITH_MTLS_TARGET)
with_mtls_cert_file=set_defaults(with_mtls_cert_file, DEFAULT_WITH_MTLS_CERT_FILE)
with_mtls_key_file=set_defaults(with_mtls_key_file, DEFAULT_WITH_MTLS_KEY_FILE)
with_mtls_server_ca_file=set_defaults(with_mtls_server_ca_file, DEFAULT_WITH_MTLS_SERVER_CA_FILE)
with_mtls_client_ca_file=set_defaults(with_mtls_client_ca_file, DEFAULT_WITH_MTLS_CLIENT_CA_FILE)
with_mtls_cert_verification_methods=set_defaults(with_mtls_cert_verification_methods, DEFAULT_WITH_MTLS_CERT_VERIFICATION_METHODS)
with_mtls_ocsp_responder_url=set_defaults(with_mtls_ocsp_responder_url, DEFAULT_WITH_MTLS_OCSP_RESPONDER_URL)

print(without_tls_address)

with open(ENV_FILE, 'w') as writer:
    writer.write(f"MPROXY_MQTT_WITHOUT_TLS_ADDRESS = {without_tls_address}")
    writer.write(f"MPROXY_MQTT_WITHOUT_TLS_TARGET = {without_tls_target}")

    writer.write(f"MPROXY_MQTT_WITH_TLS_ADDRESS= {with_tls_address}")
    writer.write(f"MPROXY_MQTT_WITH_TLS_TARGET= {with_tls_target}")
    writer.write(f"MPROXY_MQTT_WITH_TLS_CERT_FILE= {with_tls_cert_file}")
    writer.write(f"MPROXY_MQTT_WITH_TLS_KEY_FILE= {with_tls_key_file}")
    writer.write(f"MPROXY_MQTT_WITH_TLS_SERVER_CA_FILE= {with_tls_server_ca_file}")
    
    writer.write(f"MPROXY_MQTT_WITH_MTLS_ADDRESS= {with_mtls_address}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_TARGET= {with_mtls_target}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_CERT_FILE= {with_mtls_cert_file}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_KEY_FILE= {with_mtls_key_file}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_SERVER_CA_FILE= {with_mtls_server_ca_file}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_CLIENT_CA_FILE= {with_mtls_client_ca_file}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_CERT_VERIFICATION_METHODS= {with_mtls_cert_verification_methods}")
    writer.write(f"MPROXY_MQTT_WITH_MTLS_OCSP_RESPONDER_URL= {with_mtls_ocsp_responder_url}")